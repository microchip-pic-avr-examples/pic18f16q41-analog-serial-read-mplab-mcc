

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 12 13:23:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F16Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.32
    22                           ; Generated 10/02/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F16Q41 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    58  0000                     
    59 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    60  0000                     
    61 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000501                     __pnvCOMRAM:
    65                           	callstack 0
    66  000501                     _INT2_InterruptHandler:
    67                           	callstack 0
    68  000501                     	ds	2
    69  000503                     _INT1_InterruptHandler:
    70                           	callstack 0
    71  000503                     	ds	2
    72  000505                     _INT0_InterruptHandler:
    73                           	callstack 0
    74  000505                     	ds	2
    75  0000                     _ACTCON	set	172
    76  0000                     _OSCTUNE	set	176
    77  0000                     _OSCSTAT	set	178
    78  0000                     _OSCFRQ	set	177
    79  0000                     _OSCEN	set	179
    80  0000                     _OSCCON3	set	175
    81  0000                     _OSCCON2	set	174
    82  0000                     _OSCCON1	set	173
    83  0000                     _IOCCF	set	1047
    84  0000                     _IOCCN	set	1046
    85  0000                     _IOCCP	set	1045
    86  0000                     _IOCBF	set	1039
    87  0000                     _IOCBN	set	1038
    88  0000                     _IOCBP	set	1037
    89  0000                     _IOCAF	set	1031
    90  0000                     _IOCAN	set	1030
    91  0000                     _IOCAP	set	1029
    92  0000                     _INLVLC	set	1044
    93  0000                     _INLVLB	set	1036
    94  0000                     _INLVLA	set	1028
    95  0000                     _SLRCONC	set	1043
    96  0000                     _SLRCONB	set	1035
    97  0000                     _SLRCONA	set	1027
    98  0000                     _ODCONC	set	1042
    99  0000                     _ODCONB	set	1034
   100  0000                     _ODCONA	set	1026
   101  0000                     _WPUC	set	1041
   102  0000                     _WPUB	set	1033
   103  0000                     _WPUA	set	1025
   104  0000                     _ANSELC	set	1040
   105  0000                     _ANSELB	set	1032
   106  0000                     _ANSELA	set	1024
   107  0000                     _LATCbits	set	1216
   108  0000                     _TRISC	set	1224
   109  0000                     _TRISB	set	1223
   110  0000                     _TRISA	set	1222
   111  0000                     _LATC	set	1216
   112  0000                     _LATB	set	1215
   113  0000                     _LATA	set	1214
   114  0000                     _PIR10bits	set	1213
   115  0000                     _PIR6bits	set	1209
   116  0000                     _PIR1bits	set	1204
   117  0000                     _INTCON0bits	set	1238
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122  00FED6                     __pcinit:
   123                           	callstack 0
   124  00FED6                     start_initialization:
   125                           	callstack 0
   126  00FED6                     __initialization:
   127                           	callstack 0
   128  00FED6                     end_of_initialization:
   129                           	callstack 0
   130  00FED6                     __end_of__initialization:
   131                           	callstack 0
   132  00FED6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  00FED8  6EF8               	movwf	tblptru,c
   134  00FEDA  0100               	movlb	0
   135  00FEDC  EFA3  F07F         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	cstackCOMRAM
   138  000507                     __pcstackCOMRAM:
   139                           	callstack 0
   140  000507                     INT0_SetInterruptHandler@InterruptHandler:
   141                           	callstack 0
   142  000507                     INT1_SetInterruptHandler@InterruptHandler:
   143                           	callstack 0
   144  000507                     INT2_SetInterruptHandler@InterruptHandler:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x0
   148  000507                     	ds	2
   149  000509                     ??_main:
   150                           
   151                           ; 1 bytes @ 0x2
   152  000509                     	ds	1
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 27 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  2  178[None  ] int 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   177 ;;Total ram usage:        1 bytes
   178 ;; Hardware stack levels required when called: 3
   179 ;; This function calls:
   180 ;;		_SYSTEM_Initialize
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187  00FF46                     __ptext0:
   188                           	callstack 0
   189  00FF46                     _main:
   190                           	callstack 125
   191  00FF46                     
   192                           ;main.c: 29:     SYSTEM_Initialize();
   193  00FF46  EC70  F07F         	call	_SYSTEM_Initialize	;wreg free
   194  00FF4A                     l944:
   195  00FF4A  B2C0               	btfsc	192,1,c	;volatile
   196  00FF4C  EFAA  F07F         	goto	u81
   197  00FF50  EFAD  F07F         	goto	u80
   198  00FF54                     u81:
   199  00FF54  0E01               	movlw	1
   200  00FF56  EFAE  F07F         	goto	u86
   201  00FF5A                     u80:
   202  00FF5A  0E00               	movlw	0
   203  00FF5C                     u86:
   204  00FF5C  0AFF               	xorlw	255
   205  00FF5E  6E09               	movwf	??_main^(0+1280),c
   206  00FF60  4609               	rlncf	??_main^(0+1280),f,c
   207  00FF62  50C0               	movf	192,w,c	;volatile
   208  00FF64  1809               	xorwf	??_main^(0+1280),w,c
   209  00FF66  0BFD               	andlw	-3
   210  00FF68  1809               	xorwf	??_main^(0+1280),w,c
   211  00FF6A  6EC0               	movwf	192,c	;volatile
   212  00FF6C                     
   213                           ;main.c: 34:         _delay((unsigned long)((500)*(1000000/4000.0)));
   214  00FF6C  0EA3               	movlw	163
   215  00FF6E  6E09               	movwf	??_main^(0+1280),c
   216  00FF70  0E55               	movlw	85
   217  00FF72                     u97:
   218  00FF72  2EE8               	decfsz	wreg,f,c
   219  00FF74  D7FE               	bra	u97
   220  00FF76  2E09               	decfsz	??_main^(0+1280),f,c
   221  00FF78  D7FC               	bra	u97
   222  00FF7A  F000               	nop	
   223  00FF7C  EFA5  F07F         	goto	l944
   224  00FF80  EFFE  F07F         	goto	start
   225  00FF84                     __end_of_main:
   226                           	callstack 0
   227                           
   228 ;; *************** function _SYSTEM_Initialize *****************
   229 ;; Defined at:
   230 ;;		line 49 in file "mcc_generated_files/system/src/system.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels used: 1
   250 ;; Hardware stack levels required when called: 2
   251 ;; This function calls:
   252 ;;		_CLOCK_Initialize
   253 ;;		_INTERRUPT_Initialize
   254 ;;		_PIN_MANAGER_Initialize
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  00FEE0                     __ptext1:
   262                           	callstack 0
   263  00FEE0                     _SYSTEM_Initialize:
   264                           	callstack 125
   265  00FEE0                     
   266                           ;mcc_generated_files/system/src/system.c: 51:     CLOCK_Initialize();
   267  00FEE0  EC77  F07F         	call	_CLOCK_Initialize	;wreg free
   268                           
   269                           ;mcc_generated_files/system/src/system.c: 52:     PIN_MANAGER_Initialize();
   270  00FEE4  ECC2  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   271  00FEE8                     
   272                           ;mcc_generated_files/system/src/system.c: 53:     INTERRUPT_Initialize();
   273  00FEE8  EC89  F07F         	call	_INTERRUPT_Initialize	;wreg free
   274  00FEEC  0012               	return		;funcret
   275  00FEEE                     __end_of_SYSTEM_Initialize:
   276                           	callstack 0
   277                           
   278 ;; *************** function _PIN_MANAGER_Initialize *****************
   279 ;; Defined at:
   280 ;;		line 47 in file "mcc_generated_files/system/src/pins.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_SYSTEM_Initialize
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text2
   308  00FF84                     __ptext2:
   309                           	callstack 0
   310  00FF84                     _PIN_MANAGER_Initialize:
   311                           	callstack 126
   312  00FF84                     
   313                           ;mcc_generated_files/system/src/pins.c: 52:     LATA = 0x0;
   314  00FF84  0E00               	movlw	0
   315  00FF86  6EBE               	movwf	190,c	;volatile
   316                           
   317                           ;mcc_generated_files/system/src/pins.c: 53:     LATB = 0x0;
   318  00FF88  0E00               	movlw	0
   319  00FF8A  6EBF               	movwf	191,c	;volatile
   320                           
   321                           ;mcc_generated_files/system/src/pins.c: 54:     LATC = 0x0;
   322  00FF8C  0E00               	movlw	0
   323  00FF8E  6EC0               	movwf	192,c	;volatile
   324                           
   325                           ;mcc_generated_files/system/src/pins.c: 59:     TRISA = 0x3F;
   326  00FF90  0E3F               	movlw	63
   327  00FF92  6EC6               	movwf	198,c	;volatile
   328                           
   329                           ;mcc_generated_files/system/src/pins.c: 60:     TRISB = 0xF0;
   330  00FF94  0EF0               	movlw	240
   331  00FF96  6EC7               	movwf	199,c	;volatile
   332                           
   333                           ;mcc_generated_files/system/src/pins.c: 61:     TRISC = 0xFD;
   334  00FF98  0EFD               	movlw	253
   335  00FF9A  6EC8               	movwf	200,c	;volatile
   336                           
   337                           ;mcc_generated_files/system/src/pins.c: 66:     ANSELA = 0x37;
   338  00FF9C  0E37               	movlw	55
   339  00FF9E  0104               	movlb	4	; () banked
   340  00FFA0  6F00               	movwf	0,b	;volatile
   341                           
   342                           ;mcc_generated_files/system/src/pins.c: 67:     ANSELB = 0xF0;
   343  00FFA2  0EF0               	movlw	240
   344  00FFA4  6F08               	movwf	8,b	;volatile
   345                           
   346                           ;mcc_generated_files/system/src/pins.c: 68:     ANSELC = 0xFD;
   347  00FFA6  0EFD               	movlw	253
   348  00FFA8  6F10               	movwf	16,b	;volatile
   349                           
   350                           ;mcc_generated_files/system/src/pins.c: 73:     WPUA = 0x0;
   351  00FFAA  0E00               	movlw	0
   352  00FFAC  6F01               	movwf	1,b	;volatile
   353                           
   354                           ;mcc_generated_files/system/src/pins.c: 74:     WPUB = 0x0;
   355  00FFAE  0E00               	movlw	0
   356  00FFB0  6F09               	movwf	9,b	;volatile
   357                           
   358                           ;mcc_generated_files/system/src/pins.c: 75:     WPUC = 0x0;
   359  00FFB2  0E00               	movlw	0
   360  00FFB4  6F11               	movwf	17,b	;volatile
   361                           
   362                           ;mcc_generated_files/system/src/pins.c: 84:     ODCONA = 0x0;
   363  00FFB6  0E00               	movlw	0
   364  00FFB8  6F02               	movwf	2,b	;volatile
   365                           
   366                           ;mcc_generated_files/system/src/pins.c: 85:     ODCONB = 0x0;
   367  00FFBA  0E00               	movlw	0
   368  00FFBC  6F0A               	movwf	10,b	;volatile
   369                           
   370                           ;mcc_generated_files/system/src/pins.c: 86:     ODCONC = 0x0;
   371  00FFBE  0E00               	movlw	0
   372  00FFC0  6F12               	movwf	18,b	;volatile
   373                           
   374                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCONA = 0x37;
   375  00FFC2  0E37               	movlw	55
   376  00FFC4  6F03               	movwf	3,b	;volatile
   377                           
   378                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONB = 0xF0;
   379  00FFC6  0EF0               	movlw	240
   380  00FFC8  6F0B               	movwf	11,b	;volatile
   381  00FFCA                     
   382                           ; BSR set to: 4
   383                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONC = 0xFF;
   384  00FFCA  6913               	setf	19,b	;volatile
   385                           
   386                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLA = 0x3F;
   387  00FFCC  0E3F               	movlw	63
   388  00FFCE  6F04               	movwf	4,b	;volatile
   389                           
   390                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLB = 0xF0;
   391  00FFD0  0EF0               	movlw	240
   392  00FFD2  6F0C               	movwf	12,b	;volatile
   393  00FFD4                     
   394                           ; BSR set to: 4
   395                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLC = 0xFF;
   396  00FFD4  6914               	setf	20,b	;volatile
   397                           
   398                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAP = 0x0;
   399  00FFD6  0E00               	movlw	0
   400  00FFD8  6F05               	movwf	5,b	;volatile
   401                           
   402                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAN = 0x0;
   403  00FFDA  0E00               	movlw	0
   404  00FFDC  6F06               	movwf	6,b	;volatile
   405                           
   406                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAF = 0x0;
   407  00FFDE  0E00               	movlw	0
   408  00FFE0  6F07               	movwf	7,b	;volatile
   409                           
   410                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBP = 0x0;
   411  00FFE2  0E00               	movlw	0
   412  00FFE4  6F0D               	movwf	13,b	;volatile
   413                           
   414                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBN = 0x0;
   415  00FFE6  0E00               	movlw	0
   416  00FFE8  6F0E               	movwf	14,b	;volatile
   417                           
   418                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBF = 0x0;
   419  00FFEA  0E00               	movlw	0
   420  00FFEC  6F0F               	movwf	15,b	;volatile
   421                           
   422                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCP = 0x0;
   423  00FFEE  0E00               	movlw	0
   424  00FFF0  6F15               	movwf	21,b	;volatile
   425                           
   426                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCN = 0x0;
   427  00FFF2  0E00               	movlw	0
   428  00FFF4  6F16               	movwf	22,b	;volatile
   429                           
   430                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCF = 0x0;
   431  00FFF6  0E00               	movlw	0
   432  00FFF8  6F17               	movwf	23,b	;volatile
   433  00FFFA                     
   434                           ; BSR set to: 4
   435  00FFFA  0012               	return		;funcret
   436  00FFFC                     __end_of_PIN_MANAGER_Initialize:
   437                           	callstack 0
   438                           
   439 ;; *************** function _INTERRUPT_Initialize *****************
   440 ;; Defined at:
   441 ;;		line 52 in file "mcc_generated_files/system/src/interrupt.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 1
   462 ;; This function calls:
   463 ;;		_INT0_SetInterruptHandler
   464 ;;		_INT1_SetInterruptHandler
   465 ;;		_INT2_SetInterruptHandler
   466 ;; This function is called by:
   467 ;;		_SYSTEM_Initialize
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text3
   472  00FF12                     __ptext3:
   473                           	callstack 0
   474  00FF12                     _INTERRUPT_Initialize:
   475                           	callstack 125
   476  00FF12                     
   477                           ;mcc_generated_files/system/src/interrupt.c: 55:     INTCON0bits.IPEN = 0;
   478  00FF12  9AD6               	bcf	214,5,c	;volatile
   479                           
   480                           ;mcc_generated_files/system/src/interrupt.c: 59:     (PIR1bits.INT0IF = 0);
   481  00FF14  90B4               	bcf	180,0,c	;volatile
   482                           
   483                           ;mcc_generated_files/system/src/interrupt.c: 60:     (INTCON0bits.INT0EDG = 1);
   484  00FF16  80D6               	bsf	214,0,c	;volatile
   485  00FF18                     
   486                           ;mcc_generated_files/system/src/interrupt.c: 62:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   487  00FF18  0E00               	movlw	0
   488  00FF1A  6E07               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
   489  00FF1C  0E00               	movlw	0
   490  00FF1E  6E08               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   491  00FF20  EC5C  F07F         	call	_INT0_SetInterruptHandler	;wreg free
   492  00FF24                     
   493                           ;mcc_generated_files/system/src/interrupt.c: 67:     (PIR6bits.INT1IF = 0);
   494  00FF24  90B9               	bcf	185,0,c	;volatile
   495  00FF26                     
   496                           ;mcc_generated_files/system/src/interrupt.c: 68:     (INTCON0bits.INT1EDG = 1);
   497  00FF26  82D6               	bsf	214,1,c	;volatile
   498                           
   499                           ;mcc_generated_files/system/src/interrupt.c: 70:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   500  00FF28  0E00               	movlw	0
   501  00FF2A  6E07               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
   502  00FF2C  0E00               	movlw	0
   503  00FF2E  6E08               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   504  00FF30  EC61  F07F         	call	_INT1_SetInterruptHandler	;wreg free
   505  00FF34                     
   506                           ;mcc_generated_files/system/src/interrupt.c: 75:     (PIR10bits.INT2IF = 0);
   507  00FF34  90BD               	bcf	189,0,c	;volatile
   508  00FF36                     
   509                           ;mcc_generated_files/system/src/interrupt.c: 76:     (INTCON0bits.INT2EDG = 1);
   510  00FF36  84D6               	bsf	214,2,c	;volatile
   511                           
   512                           ;mcc_generated_files/system/src/interrupt.c: 78:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   513  00FF38  0E00               	movlw	0
   514  00FF3A  6E07               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
   515  00FF3C  0E00               	movlw	0
   516  00FF3E  6E08               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   517  00FF40  EC66  F07F         	call	_INT2_SetInterruptHandler	;wreg free
   518  00FF44  0012               	return		;funcret
   519  00FF46                     __end_of_INTERRUPT_Initialize:
   520                           	callstack 0
   521                           
   522 ;; *************** function _INT2_SetInterruptHandler *****************
   523 ;; Defined at:
   524 ;;		line 154 in file "mcc_generated_files/system/src/interrupt.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   527 ;;		 -> INT2_DefaultInterruptHandler(1), 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_INTERRUPT_Initialize
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text4
   553  00FECC                     __ptext4:
   554                           	callstack 0
   555  00FECC                     _INT2_SetInterruptHandler:
   556                           	callstack 125
   557  00FECC                     
   558                           ;mcc_generated_files/system/src/interrupt.c: 155:     INT2_InterruptHandler = InterruptH
      +                          andler;
   559  00FECC  C507  F501         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   560  00FED0  C508  F502         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   561  00FED4  0012               	return		;funcret
   562  00FED6                     __end_of_INT2_SetInterruptHandler:
   563                           	callstack 0
   564                           
   565 ;; *************** function _INT1_SetInterruptHandler *****************
   566 ;; Defined at:
   567 ;;		line 128 in file "mcc_generated_files/system/src/interrupt.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   570 ;;		 -> INT1_DefaultInterruptHandler(1), 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   586 ;;Total ram usage:        2 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_INTERRUPT_Initialize
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text5
   596  00FEC2                     __ptext5:
   597                           	callstack 0
   598  00FEC2                     _INT1_SetInterruptHandler:
   599                           	callstack 125
   600  00FEC2                     
   601                           ;mcc_generated_files/system/src/interrupt.c: 129:     INT1_InterruptHandler = InterruptH
      +                          andler;
   602  00FEC2  C507  F503         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   603  00FEC6  C508  F504         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   604  00FECA  0012               	return		;funcret
   605  00FECC                     __end_of_INT1_SetInterruptHandler:
   606                           	callstack 0
   607                           
   608 ;; *************** function _INT0_SetInterruptHandler *****************
   609 ;; Defined at:
   610 ;;		line 102 in file "mcc_generated_files/system/src/interrupt.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   613 ;;		 -> INT0_DefaultInterruptHandler(1), 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   629 ;;Total ram usage:        2 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_INTERRUPT_Initialize
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text6
   639  00FEB8                     __ptext6:
   640                           	callstack 0
   641  00FEB8                     _INT0_SetInterruptHandler:
   642                           	callstack 125
   643  00FEB8                     
   644                           ;mcc_generated_files/system/src/interrupt.c: 103:     INT0_InterruptHandler = InterruptH
      +                          andler;
   645  00FEB8  C507  F505         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   646  00FEBC  C508  F506         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   647  00FEC0  0012               	return		;funcret
   648  00FEC2                     __end_of_INT0_SetInterruptHandler:
   649                           	callstack 0
   650                           
   651 ;; *************** function _CLOCK_Initialize *****************
   652 ;; Defined at:
   653 ;;		line 46 in file "mcc_generated_files/system/src/clock.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_SYSTEM_Initialize
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text7
   681  00FEEE                     __ptext7:
   682                           	callstack 0
   683  00FEEE                     _CLOCK_Initialize:
   684                           	callstack 126
   685  00FEEE                     
   686                           ;mcc_generated_files/system/src/clock.c: 50:     OSCCON1 = 0x62;
   687  00FEEE  0E62               	movlw	98
   688  00FEF0  0100               	movlb	0	; () banked
   689  00FEF2  6FAD               	movwf	173,b	;volatile
   690                           
   691                           ;mcc_generated_files/system/src/clock.c: 52:     OSCCON2 = 0x70;
   692  00FEF4  0E70               	movlw	112
   693  00FEF6  6FAE               	movwf	174,b	;volatile
   694                           
   695                           ;mcc_generated_files/system/src/clock.c: 54:     OSCCON3 = 0x0;
   696  00FEF8  0E00               	movlw	0
   697  00FEFA  6FAF               	movwf	175,b	;volatile
   698                           
   699                           ;mcc_generated_files/system/src/clock.c: 56:     OSCEN = 0x0;
   700  00FEFC  0E00               	movlw	0
   701  00FEFE  6FB3               	movwf	179,b	;volatile
   702                           
   703                           ;mcc_generated_files/system/src/clock.c: 58:     OSCFRQ = 0x2;
   704  00FF00  0E02               	movlw	2
   705  00FF02  6FB1               	movwf	177,b	;volatile
   706                           
   707                           ;mcc_generated_files/system/src/clock.c: 60:     OSCSTAT = 0x0;
   708  00FF04  0E00               	movlw	0
   709  00FF06  6FB2               	movwf	178,b	;volatile
   710                           
   711                           ;mcc_generated_files/system/src/clock.c: 62:     OSCTUNE = 0x0;
   712  00FF08  0E00               	movlw	0
   713  00FF0A  6FB0               	movwf	176,b	;volatile
   714                           
   715                           ;mcc_generated_files/system/src/clock.c: 64:     ACTCON = 0x0;
   716  00FF0C  0E00               	movlw	0
   717  00FF0E  6FAC               	movwf	172,b	;volatile
   718  00FF10                     
   719                           ; BSR set to: 0
   720  00FF10  0012               	return		;funcret
   721  00FF12                     __end_of_CLOCK_Initialize:
   722                           	callstack 0
   723  0000                     
   724                           	psect	rparam
   725  0000                     
   726                           	psect	idloc
   727                           
   728                           ;Config register IDLOC0 @ 0x200000
   729                           ;	unspecified, using default values
   730  200000                     	org	2097152
   731  200000  0FFF               	dw	4095
   732                           
   733                           ;Config register IDLOC1 @ 0x200002
   734                           ;	unspecified, using default values
   735  200002                     	org	2097154
   736  200002  0FFF               	dw	4095
   737                           
   738                           ;Config register IDLOC2 @ 0x200004
   739                           ;	unspecified, using default values
   740  200004                     	org	2097156
   741  200004  0FFF               	dw	4095
   742                           
   743                           ;Config register IDLOC3 @ 0x200006
   744                           ;	unspecified, using default values
   745  200006                     	org	2097158
   746  200006  0FFF               	dw	4095
   747                           
   748                           ;Config register IDLOC4 @ 0x200008
   749                           ;	unspecified, using default values
   750  200008                     	org	2097160
   751  200008  0FFF               	dw	4095
   752                           
   753                           ;Config register IDLOC5 @ 0x20000A
   754                           ;	unspecified, using default values
   755  20000A                     	org	2097162
   756  20000A  0FFF               	dw	4095
   757                           
   758                           ;Config register IDLOC6 @ 0x20000C
   759                           ;	unspecified, using default values
   760  20000C                     	org	2097164
   761  20000C  0FFF               	dw	4095
   762                           
   763                           ;Config register IDLOC7 @ 0x20000E
   764                           ;	unspecified, using default values
   765  20000E                     	org	2097166
   766  20000E  0FFF               	dw	4095
   767                           
   768                           ;Config register IDLOC8 @ 0x200010
   769                           ;	unspecified, using default values
   770  200010                     	org	2097168
   771  200010  0FFF               	dw	4095
   772                           
   773                           ;Config register IDLOC9 @ 0x200012
   774                           ;	unspecified, using default values
   775  200012                     	org	2097170
   776  200012  0FFF               	dw	4095
   777                           
   778                           ;Config register IDLOC10 @ 0x200014
   779                           ;	unspecified, using default values
   780  200014                     	org	2097172
   781  200014  0FFF               	dw	4095
   782                           
   783                           ;Config register IDLOC11 @ 0x200016
   784                           ;	unspecified, using default values
   785  200016                     	org	2097174
   786  200016  0FFF               	dw	4095
   787                           
   788                           ;Config register IDLOC12 @ 0x200018
   789                           ;	unspecified, using default values
   790  200018                     	org	2097176
   791  200018  0FFF               	dw	4095
   792                           
   793                           ;Config register IDLOC13 @ 0x20001A
   794                           ;	unspecified, using default values
   795  20001A                     	org	2097178
   796  20001A  0FFF               	dw	4095
   797                           
   798                           ;Config register IDLOC14 @ 0x20001C
   799                           ;	unspecified, using default values
   800  20001C                     	org	2097180
   801  20001C  0FFF               	dw	4095
   802                           
   803                           ;Config register IDLOC15 @ 0x20001E
   804                           ;	unspecified, using default values
   805  20001E                     	org	2097182
   806  20001E  0FFF               	dw	4095
   807                           
   808                           	psect	config
   809                           
   810                           ;Config register CONFIG1 @ 0x300000
   811                           ;	External Oscillator Selection
   812                           ;	FEXTOSC = OFF, Oscillator not enabled
   813                           ;	Reset Oscillator Selection
   814                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   815  300000                     	org	3145728
   816  300000  FC                 	db	252
   817                           
   818                           ;Config register CONFIG2 @ 0x300001
   819                           ;	Clock out Enable bit
   820                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   821                           ;	PRLOCKED One-Way Set Enable bit
   822                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   823                           ;	Clock Switch Enable bit
   824                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   825                           ;	Fail-Safe Clock Monitor Enable bit
   826                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   827                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
   828                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
   829                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
   830                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
   831  300001                     	org	3145729
   832  300001  FF                 	db	255
   833                           
   834                           ;Config register CONFIG3 @ 0x300002
   835                           ;	MCLR Enable bit
   836                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   837                           ;	Power-up timer selection bits
   838                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   839                           ;	Multi-vector enable bit
   840                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
   841                           ;	IVTLOCK bit One-way set enable bit
   842                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   843                           ;	Low Power BOR Enable bit
   844                           ;	LPBOREN = OFF, Low-Power BOR disabled
   845                           ;	Brown-out Reset Enable bits
   846                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   847  300002                     	org	3145730
   848  300002  F7                 	db	247
   849                           
   850                           ;Config register CONFIG4 @ 0x300003
   851                           ;	Brown-out Reset Voltage Selection bits
   852                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   853                           ;	ZCD Disable bit
   854                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   855                           ;	PPSLOCK bit One-Way Set Enable bit
   856                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   857                           ;	Stack Full/Underflow Reset Enable bit
   858                           ;	STVREN = ON, Stack full/underflow will cause Reset
   859                           ;	Low Voltage Programming Enable bit
   860                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   861                           ;	Extended Instruction Set Enable bit
   862                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   863  300003                     	org	3145731
   864  300003  FF                 	db	255
   865                           
   866                           ;Config register CONFIG5 @ 0x300004
   867                           ;	WDT Period selection bits
   868                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   869                           ;	WDT operating mode
   870                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   871  300004                     	org	3145732
   872  300004  9F                 	db	159
   873                           
   874                           ;Config register CONFIG6 @ 0x300005
   875                           ;	WDT Window Select bits
   876                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   877                           ;	WDT input clock selector
   878                           ;	WDTCCS = SC, Software Control
   879  300005                     	org	3145733
   880  300005  FF                 	db	255
   881                           
   882                           ;Config register CONFIG7 @ 0x300006
   883                           ;	Boot Block Size selection bits
   884                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   885                           ;	Boot Block enable bit
   886                           ;	BBEN = OFF, Boot block disabled
   887                           ;	Storage Area Flash enable bit
   888                           ;	SAFEN = OFF, SAF disabled
   889                           ;	Background Debugger
   890                           ;	DEBUG = OFF, Background Debugger disabled
   891  300006                     	org	3145734
   892  300006  FF                 	db	255
   893                           
   894                           ;Config register CONFIG8 @ 0x300007
   895                           ;	Boot Block Write Protection bit
   896                           ;	WRTB = OFF, Boot Block not Write protected
   897                           ;	Configuration Register Write Protection bit
   898                           ;	WRTC = OFF, Configuration registers not Write protected
   899                           ;	Data EEPROM Write Protection bit
   900                           ;	WRTD = OFF, Data EEPROM not Write protected
   901                           ;	SAF Write protection bit
   902                           ;	WRTSAF = OFF, SAF not Write Protected
   903                           ;	Application Block write protection bit
   904                           ;	WRTAPP = OFF, Application Block not write protected
   905  300007                     	org	3145735
   906  300007  FF                 	db	255
   907                           
   908                           ;Config register CONFIG9 @ 0x300008
   909                           ;	PFM and Data EEPROM Code Protection bit
   910                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   911  300008                     	org	3145736
   912  300008  FF                 	db	255
   913                           
   914                           ; Padding undefined space
   915  300009                     	org	3145737
   916  300009  FF                 	db	255
   917                           tosu	equ	0x4FF
   918                           tosh	equ	0x4FE
   919                           tosl	equ	0x4FD
   920                           stkptr	equ	0x4FC
   921                           pclatu	equ	0x4FB
   922                           pclath	equ	0x4FA
   923                           pcl	equ	0x4F9
   924                           tblptru	equ	0x4F8
   925                           tblptrh	equ	0x4F7
   926                           tblptrl	equ	0x4F6
   927                           tablat	equ	0x4F5
   928                           prodh	equ	0x4F4
   929                           prodl	equ	0x4F3
   930                           indf0	equ	0x4EF
   931                           postinc0	equ	0x4EE
   932                           postdec0	equ	0x4ED
   933                           preinc0	equ	0x4EC
   934                           plusw0	equ	0x4EB
   935                           fsr0h	equ	0x4EA
   936                           fsr0l	equ	0x4E9
   937                           wreg	equ	0x4E8
   938                           indf1	equ	0x4E7
   939                           postinc1	equ	0x4E6
   940                           postdec1	equ	0x4E5
   941                           preinc1	equ	0x4E4
   942                           plusw1	equ	0x4E3
   943                           fsr1h	equ	0x4E2
   944                           fsr1l	equ	0x4E1
   945                           bsr	equ	0x4E0
   946                           indf2	equ	0x4DF
   947                           postinc2	equ	0x4DE
   948                           postdec2	equ	0x4DD
   949                           preinc2	equ	0x4DC
   950                           plusw2	equ	0x4DB
   951                           fsr2h	equ	0x4DA
   952                           fsr2l	equ	0x4D9
   953                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       9
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0

Pointer List with Targets:

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     294
                                              2 COMRAM     1     1      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       9       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BANK20             100      0       0      34        0.0%
BANK21             100      0       0      35        0.0%
ABS                  0      0       9      36        0.0%
BITBANK20          100      0       0      37        0.0%
BITBANK21          100      0       0      38        0.0%
BIGRAM            10FF      0       0      39        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 12 13:23:09 2021

                                      l19 FF10                                        l54 FF44  
                                      l64 FEC0                                        l90 FED4  
                                      l77 FECA                                        u80 FF5A  
                                      u81 FF54                                        u86 FF5C  
                                      u97 FF72                                       l156 FFFA  
                                     l168 FEEC                                       l920 FEB8  
                                     l922 FEC2                                       l930 FF24  
                                     l924 FECC                                       l932 FF26  
                                     l940 FEE8                                       l934 FF34  
                                     l926 FF12                                       l942 FF46  
                                     l936 FF36                                       l928 FF18  
                                     l880 FF84                                       l944 FF4A  
                                     l866 FEEE                                       l882 FFCA  
                                     l938 FEE0                                       l946 FF6C  
                                     l884 FFD4                ??_INT0_SetInterruptHandler 0509  
                                     wreg 0004E8                                      _LATA 0004BE  
                                    _LATB 0004BF                                      _LATC 0004C0  
                                    _WPUA 000401                                      _WPUB 000409  
                                    _WPUC 000411                                      _main FF46  
       __size_of_INT2_SetInterruptHandler 000A                 ?_INT2_SetInterruptHandler 0507  
                                    start FFFC                              ___param_bank 000000  
                                   ?_main 0507                                     _IOCAF 000407  
                                   _IOCBF 00040F                                     _IOCCF 000417  
                                   _IOCAN 000406                                     _IOCAP 000405  
                                   _IOCBN 00040E                                     _IOCBP 00040D  
                                   _IOCCN 000416                                     _IOCCP 000415  
                                   _OSCEN 0000B3                                     _TRISA 0004C6  
                                   _TRISB 0004C7                                     _TRISC 0004C8  
                _INT1_SetInterruptHandler FEC2                           __initialization FED6  
                            __end_of_main FF84                                    ??_main 0509  
                           __activetblptr 000002                                    _ACTCON 0000AC  
                                  _ANSELA 000400                                    _ANSELB 000408  
                                  _ANSELC 000410                                    _ODCONA 000402  
                                  _ODCONB 00040A                                    _ODCONC 000412  
                                  _INLVLA 000404                                    _INLVLB 00040C  
                                  _INLVLC 000414                                    _OSCFRQ 0000B1  
                                  isa$std 000001                         ?_CLOCK_Initialize 0507  
            _INT2_DefaultInterruptHandler 000000                        ??_CLOCK_Initialize 0507  
                                  tblptru 0004F8  INT2_SetInterruptHandler@InterruptHandler 0507  
INT1_SetInterruptHandler@InterruptHandler 0507  INT0_SetInterruptHandler@InterruptHandler 0507  
           __size_of_INTERRUPT_Initialize 0034                         _SYSTEM_Initialize FEE0  
                              __accesstop 0560                   __end_of__initialization FED6  
                      ?_SYSTEM_Initialize 0507                             ___rparam_used 000001  
                          __pcstackCOMRAM 0507                       ??_SYSTEM_Initialize 0509  
        __end_of_INT2_SetInterruptHandler FED6                 __end_of_SYSTEM_Initialize FEEE  
                   _INT0_InterruptHandler 0505                                __pnvCOMRAM 0501  
              ??_INT1_SetInterruptHandler 0509                                   _OSCCON1 0000AD  
                                 _OSCCON2 0000AE                                   _OSCCON3 0000AF  
                                 _OSCSTAT 0000B2                                   _OSCTUNE 0000B0  
                                 _SLRCONA 000403                                   _SLRCONB 00040B  
                                 _SLRCONC 000413         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 0507                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit FED6  
                                 __ramtop 1600                                   __ptext0 FF46  
                                 __ptext1 FEE0                                   __ptext2 FF84  
                                 __ptext3 FF12                                   __ptext4 FECC  
                                 __ptext5 FEC2                                   __ptext6 FEB8  
                                 __ptext7 FEEE                  ??_PIN_MANAGER_Initialize 0507  
              __size_of_SYSTEM_Initialize 000E                      end_of_initialization FED6  
                _INT2_SetInterruptHandler FECC                                 _PIR10bits 0004BD  
                           __Lmediumconst 0000                     _INT1_InterruptHandler 0503  
               __size_of_CLOCK_Initialize 0024              __end_of_INTERRUPT_Initialize FF46  
            _INT0_DefaultInterruptHandler 000000                       start_initialization FED6  
         __size_of_PIN_MANAGER_Initialize 0078          __end_of_INT0_SetInterruptHandler FEC2  
                   _INT2_InterruptHandler 0501                    _PIN_MANAGER_Initialize FF84  
              ??_INT2_SetInterruptHandler 0509                      _INTERRUPT_Initialize FF12  
                        _CLOCK_Initialize FEEE                                  _LATCbits 0004C0  
       __size_of_INT1_SetInterruptHandler 000A                 ?_INT1_SetInterruptHandler 0507  
                                _PIR1bits 0004B4                                  _PIR6bits 0004B9  
                             _INTCON0bits 0004D6                     ?_INTERRUPT_Initialize 0507  
                _INT0_SetInterruptHandler FEB8                                  __Hrparam 0000  
                                __Lrparam 0000                             __size_of_main 003E  
                                isa$xinst 000000              _INT1_DefaultInterruptHandler 000000  
                  ??_INTERRUPT_Initialize 0509                   ?_PIN_MANAGER_Initialize 0507  
                __end_of_CLOCK_Initialize FF12          __end_of_INT1_SetInterruptHandler FECC  
          __end_of_PIN_MANAGER_Initialize FFFC  
